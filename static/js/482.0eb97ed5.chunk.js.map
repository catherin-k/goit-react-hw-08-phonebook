{"version":3,"file":"static/js/482.0eb97ed5.chunk.js","mappings":"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","sources":["components/formContacts/FormContacs.styled.js","components/App.styled.js","components/formContacts/FormContacts.jsx","components/contactsList/ContactItem.styled.js","components/contactsList/ContactItem.jsx","components/contactsList/ContactsList.styled.js","components/contactsList/ContactsList.jsx","components/filter/Filter.styled.js","components/filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: ${p => p.theme.space[4]}px;\n  border: ${p => p.theme.borders.normal};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.text};\n`;\nexport const Input = styled(Field)`\n  width: 300px;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal};\n  outline: none;\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.focus};\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: max-content;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: none;\n  outline: none;\n  box-shadow: ${p => p.theme.shadows.lineShadow};\n  :hover {\n    transform: scale(1.05);\n    background-color: ${p => p.theme.colors.blue};\n    border: none;\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nexport const ErrText = styled.p`\n  color: ${p => p.theme.colors.red};\n  padding: 0px;\n  margin: 0px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n","import styled from 'styled-components';\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.l};\n  line-height: ${p => p.theme.lineHeights.body};\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  FormBox,\n  Label,\n  Input,\n  SubmitBtn,\n  ErrText,\n} from './FormContacs.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nexport const FormContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContactsList);\n\n  const submitForm = (value, { resetForm }) => {\n    // Check for the same name\n    const contactsUnicName = contacts.some(\n      item => item.name.toLowerCase() === value.name.toLowerCase()\n    );\n\n    // Add contact by condition\n    contactsUnicName\n      ? toast.warn(` ${value.name} is already in contacts`)\n      : dispatch(contactsOperations.addContacts(value));\n\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={submitForm}>\n      <FormBox>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"full name\"\n          ></Input>\n          <ErrorMessage name=\"name\" render={msg => <ErrText>{msg}</ErrText>} />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"phone number\"\n          ></Input>\n          <ErrorMessage\n            name=\"number\"\n            render={msg => <ErrText>{msg}</ErrText>}\n          />\n        </Label>\n        <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n        <ToastContainer\n          autoClose={3000}\n          position=\"top-center\"\n          theme=\"colored\"\n          pauseOnHover\n        />\n      </FormBox>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: ${p => p.theme.fontSizes.m};\n  display: flex;\n  padding: ${p => p.theme.space[2]}px;\n\n  justify-content: space-between;\n  align-items: center;\n  height: 35px;\n  box-shadow: ${p => p.theme.shadows.lineShadow};\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const Phone = styled.p`\n  margin-right: auto;\n  margin-left: auto;\n`;\nexport const Name = styled.p`\n  min-width: 40%;\n  /* margin-left: 200px; */\n`;\nexport const DeleteBtn = styled.button`\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n  border: none;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    background-color: ${p => p.theme.colors.blue};\n    outline: none;\n    border: none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, DeleteBtn, Phone, Name } from './ContactItem.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { name, number, id } = contact;\n  return (\n    <Item>\n      <Name>{name}:</Name>\n      <Phone>{number}</Phone>\n      <DeleteBtn\n        type=\"button\"\n        onClick={() => dispatch(contactsOperations.deleteContacts(id))}\n      >\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[2]}px;\n  list-style: decimal;\n`;\n","import { ContactItem } from './ContactItem';\nimport { List } from './ContactsList.styled';\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\n\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContactsList);\n  const filterValue = useSelector(contactsSelectors.getFilter);\n  console.log(contacts);\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <List>\n      {contacts &&\n        getVisibleContacts().map(contact => (\n          <ContactItem contact={contact} key={contact.id} />\n        ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nexport const FilterBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  label {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n  input {\n    margin-bottom: ${p => p.theme.space[3]}px;\n    width: 30%;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport { changeFilter } from 'redux/contacts/contacts-slice';\n\nimport { FilterBox } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const filterInput = e => {\n    console.log(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <FilterBox>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={filterInput} />\n    </FilterBox>\n  );\n};\n","import { Box } from '../components/Box';\nimport { Title } from '../components/App.styled';\nimport { FormContacts } from '../components/formContacts/FormContacts.jsx';\nimport { ContactList } from '../components/contactsList/ContactsList';\nimport { Filter } from '../components/filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <Box bg=\"lavender\" width=\"40%\" mx=\"auto\" p=\"4\" my=\"4\" boxShadow=\"boxShadow\">\n      <Title>Phonebook</Title>\n      <FormContacts />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n};\nexport default ContactsPage;\n"],"names":["FormBox","styled","Form","p","theme","space","borders","normal","Label","colors","text","Input","Field","fontSizes","m","radii","focus","SubmitBtn","shadows","lineShadow","blue","ErrText","red","s","Title","l","lineHeights","body","FormContacts","dispatch","useDispatch","contacts","useSelector","contactsSelectors","initialValues","name","number","onSubmit","value","resetForm","some","item","toLowerCase","toast","contactsOperations","htmlFor","type","pattern","title","required","placeholder","render","msg","autoClose","position","pauseOnHover","Item","Phone","Name","DeleteBtn","ContactItem","contact","id","onClick","List","ContactList","filterValue","console","log","useEffect","normalizedFilter","filter","includes","getVisibleContacts","map","FilterBox","Filter","onChange","e","target","changeFilter","Box","bg","width","mx","my","boxShadow"],"sourceRoot":""}