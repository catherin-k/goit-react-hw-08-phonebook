{"version":3,"file":"static/js/482.b681bda7.chunk.js","mappings":"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","sources":["components/formContacts/FormContacs.styled.js","components/App.styled.js","components/formContacts/FormContacts.jsx","components/contactsList/ContactItem.styled.js","components/contactsList/ContactItem.jsx","components/contactsList/ContactsList.styled.js","components/contactsList/ContactsList.jsx","components/filter/Filter.styled.js","components/filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: ${p => p.theme.space[4]}px;\n  border: ${p => p.theme.borders.normal};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.text};\n`;\nexport const Input = styled(Field)`\n  width: 300px;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal};\n  outline: none;\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.focus};\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: max-content;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: none;\n  outline: none;\n  box-shadow: ${p => p.theme.shadows.lineShadow};\n  :hover {\n    transform: scale(1.05);\n    background-color: ${p => p.theme.colors.blue};\n    border: none;\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nexport const ErrText = styled.p`\n  color: ${p => p.theme.colors.red};\n  padding: 0px;\n  margin: 0px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n","import styled from 'styled-components';\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.l};\n  line-height: ${p => p.theme.lineHeights.body};\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  FormBox,\n  Label,\n  Input,\n  SubmitBtn,\n  ErrText,\n} from './FormContacs.styled';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../../redux/contactsApiSlice';\n\nexport const FormContacts = () => {\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const submitForm = ({ name, phone }, { resetForm }) => {\n    // Check for the same name\n    const contactsUnicName = contacts.some(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n\n    // Add contact by condition\n    contactsUnicName\n      ? toast.warn(` ${name} is already in contacts`)\n      : addContact({ name, phone });\n\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ name: '', phone: '' }} onSubmit={submitForm}>\n      <FormBox>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"full name\"\n          ></Input>\n          <ErrorMessage name=\"name\" render={msg => <ErrText>{msg}</ErrText>} />\n        </Label>\n        <Label htmlFor=\"phone\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"phone number\"\n          ></Input>\n          <ErrorMessage name=\"phone\" render={msg => <ErrText>{msg}</ErrText>} />\n        </Label>\n        <SubmitBtn type=\"submit\" disabled={isLoading}>\n          Add contact\n        </SubmitBtn>\n        <ToastContainer\n          autoClose={3000}\n          position=\"top-center\"\n          theme=\"colored\"\n          pauseOnHover\n        />\n      </FormBox>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: ${p => p.theme.fontSizes.m};\n  display: flex;\n  padding: ${p => p.theme.space[2]}px;\n\n  justify-content: space-between;\n  align-items: center;\n  height: 35px;\n  box-shadow: ${p => p.theme.shadows.lineShadow};\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const Phone = styled.p`\n  margin-right: auto;\n  margin-left: auto;\n`;\nexport const Name = styled.p`\n  min-width: 40%;\n  /* margin-left: 200px; */\n`;\nexport const DeleteBtn = styled.button`\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n  border: none;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    background-color: ${p => p.theme.colors.blue};\n    outline: none;\n    border: none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, DeleteBtn, Phone, Name } from './ContactItem.styled';\nimport { useDeleteContactMutation } from '../../redux/contactsApiSlice';\n\nexport const ContactItem = ({ contact }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const { name, phone, id } = contact;\n  return (\n    <Item>\n      <Name>{name}:</Name>\n      <Phone>{phone}</Phone>\n      <DeleteBtn\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[2]}px;\n  list-style: decimal;\n`;\n","import { ContactItem } from './ContactItem';\nimport { List } from './ContactsList.styled';\nimport { useGetContactsQuery } from '../../redux/contactsApiSlice';\nimport { useSelector } from 'react-redux/es/exports';\nimport { getFilter } from '../../redux/filterSlice';\n\nexport const ContactList = () => {\n  const { data } = useGetContactsQuery();\n  const filterValue = useSelector(getFilter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <List>\n      {data &&\n        getVisibleContacts().map(contact => (\n          <ContactItem contact={contact} key={contact.id} />\n        ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nexport const FilterBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  label {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n  input {\n    margin-bottom: ${p => p.theme.space[3]}px;\n    width: 30%;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterValue } from '../../redux/filterSlice';\nimport { FilterBox } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterInput = e => {\n    dispatch(filterValue(e.target.value));\n  };\n\n  return (\n    <FilterBox>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input type=\"text\" name=\"filter\" onChange={filterInput} />\n    </FilterBox>\n  );\n};\n","import { Box } from '../components/Box';\nimport { Title } from '../components/App.styled';\nimport { FormContacts } from '../components/formContacts/FormContacts.jsx';\nimport { ContactList } from '../components/contactsList/ContactsList';\nimport { Filter } from '../components/filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <Box bg=\"lavender\" width=\"40%\" mx=\"auto\" p=\"4\" my=\"4\" boxShadow=\"boxShadow\">\n      <Title>Phonebook</Title>\n      <FormContacts />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n};\nexport default ContactsPage;\n"],"names":["FormBox","styled","Form","p","theme","space","borders","normal","Label","colors","text","Input","Field","fontSizes","m","radii","focus","SubmitBtn","shadows","lineShadow","blue","ErrText","red","s","Title","l","lineHeights","body","FormContacts","useAddContactMutation","addContact","isLoading","contacts","useGetContactsQuery","data","initialValues","name","phone","onSubmit","resetForm","some","item","toLowerCase","toast","htmlFor","type","pattern","title","required","placeholder","render","msg","disabled","autoClose","position","pauseOnHover","Item","Phone","Name","DeleteBtn","ContactItem","contact","useDeleteContactMutation","deleteContact","id","onClick","List","ContactList","filterValue","useSelector","getFilter","normalizedFilter","filter","includes","getVisibleContacts","map","FilterBox","Filter","dispatch","useDispatch","onChange","e","target","value","Box","bg","width","mx","my","boxShadow"],"sourceRoot":""}