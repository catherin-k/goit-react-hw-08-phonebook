{"version":3,"file":"static/js/430.087f7419.chunk.js","mappings":"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","sources":["components/App.styled.js","components/formContacts/FormContacs.styled.js","components/formContacts/FormContacts.jsx","components/contactsList/ContactItem.styled.js","components/contactsList/ContactItem.jsx","components/contactsList/ContactsList.styled.js","components/contactsList/ContactsList.jsx","components/filter/Filter.styled.js","components/filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.l};\n  line-height: ${p => p.theme.lineHeights.body};\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: ${p => p.theme.space[4]}px;\n  border: ${p => p.theme.borders.normal};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.text};\n`;\nexport const Input = styled(Field)`\n  width: 60%;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal};\n  outline: none;\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.focus};\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: max-content;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: none;\n  outline: none;\n  box-shadow: ${p => p.theme.shadows.lineShadow};\n  :hover {\n    transform: scale(1.05);\n    background-color: ${p => p.theme.colors.blue};\n    border: none;\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nexport const ErrText = styled.p`\n  color: ${p => p.theme.colors.red};\n  padding: 0px;\n  margin: 0px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  FormBox,\n  Label,\n  Input,\n  SubmitBtn,\n  ErrText,\n} from './FormContacs.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nexport const FormContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContactsList);\n\n  const submitForm = ({ name, number }, { resetForm }) => {\n    // Check for the same name\n    const contactsUnicName = contacts.some(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n\n    // Add contact by condition\n    contactsUnicName\n      ? toast.warn(` ${name} is already in contacts`)\n      : dispatch(contactsOperations.addContacts({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={submitForm}>\n      <FormBox>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"full name\"\n          ></Input>\n          <ErrorMessage name=\"name\" render={msg => <ErrText>{msg}</ErrText>} />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"phone number\"\n          ></Input>\n          <ErrorMessage\n            name=\"number\"\n            render={msg => <ErrText>{msg}</ErrText>}\n          />\n        </Label>\n        <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n        <ToastContainer\n          autoClose={3000}\n          position=\"top-center\"\n          theme=\"colored\"\n          pauseOnHover\n        />\n      </FormBox>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: ${p => p.theme.fontSizes.m};\n  display: flex;\n  padding: ${p => p.theme.space[2]}px;\n\n  justify-content: space-between;\n  align-items: center;\n  height: 35px;\n  box-shadow: ${p => p.theme.shadows.lineShadow};\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const Phone = styled.p`\n  margin-right: auto;\n  margin-left: auto;\n`;\nexport const Name = styled.p`\n  min-width: 40%;\n`;\nexport const DeleteBtn = styled.button`\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n  border: none;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    background-color: ${p => p.theme.colors.blue};\n    outline: none;\n    border: none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, DeleteBtn, Phone, Name } from './ContactItem.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { name, number, id } = contact;\n  return (\n    <Item>\n      <Name>{name}:</Name>\n      <Phone>{number}</Phone>\n      <DeleteBtn\n        type=\"button\"\n        onClick={() => dispatch(contactsOperations.deleteContacts(id))}\n      >\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[2]}px;\n  list-style: decimal;\n`;\n","import { ContactItem } from './ContactItem';\nimport { List } from './ContactsList.styled';\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\n\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContactsList);\n  const filterValue = useSelector(contactsSelectors.getFilter);\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <List>\n      {contacts &&\n        getVisibleContacts().map(contact => (\n          <ContactItem contact={contact} key={contact.id} />\n        ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nexport const FilterBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  label {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n  input {\n    margin-bottom: ${p => p.theme.space[3]}px;\n    width: 30%;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport { changeFilter } from 'redux/contacts/contacts-slice';\n\nimport { FilterBox } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const filterInput = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <FilterBox>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={filterInput} />\n    </FilterBox>\n  );\n};\n","import { Box } from '../components/Box';\nimport { Title } from '../components/App.styled';\nimport { FormContacts } from '../components/formContacts/FormContacts.jsx';\nimport { ContactList } from '../components/contactsList/ContactsList';\nimport { Filter } from '../components/filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <Box bg=\"lavender\" width=\"40%\" mx=\"auto\" p=\"4\" my=\"4\" boxShadow=\"boxShadow\">\n      <Title>Phonebook</Title>\n      <FormContacts />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n};\nexport default ContactsPage;\n"],"names":["Title","styled","p","theme","fontSizes","l","lineHeights","body","FormBox","Form","space","borders","normal","Label","colors","text","Input","Field","m","radii","focus","SubmitBtn","shadows","lineShadow","blue","ErrText","red","s","FormContacts","dispatch","useDispatch","contacts","useSelector","contactsSelectors","initialValues","name","number","onSubmit","resetForm","some","item","toLowerCase","toast","contactsOperations","htmlFor","type","pattern","title","required","placeholder","render","msg","autoClose","position","pauseOnHover","Item","Phone","Name","DeleteBtn","ContactItem","contact","id","onClick","List","ContactList","filterValue","useEffect","normalizedFilter","filter","includes","getVisibleContacts","map","FilterBox","Filter","value","onChange","e","changeFilter","target","Box","bg","width","mx","my","boxShadow"],"sourceRoot":""}