{"version":3,"file":"static/js/50.1cb8cf63.chunk.js","mappings":"wTAGaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wGAGP,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACpB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,QAAQC,UAGpBC,EAAQP,EAAAA,GAAAA,MAAH,0GAGF,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACxB,SAAAF,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,QAElBC,GAAQV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,4MAEF,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACtB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACjB,SAAAF,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,KACnB,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,MAAMR,UAC1B,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,QAAQC,UAInB,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,QAAQU,SAItBC,EAAYhB,EAAAA,GAAAA,OAAH,6SAEN,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACtB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACb,SAAAF,GAAC,OAAIA,EAAEC,MAAMW,MAAMR,UAGtB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMc,QAAQC,cAGb,SAAAhB,GAAC,OAAIA,EAAEC,MAAMK,OAAOW,QAO/BC,EAAUpB,EAAAA,GAAAA,EAAH,2FACT,SAAAE,GAAC,OAAIA,EAAEC,MAAMK,OAAOa,OAGhB,SAAAnB,GAAC,OAAIA,EAAEC,MAAMS,UAAUU,M,6GCrChCC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAaG,SAAS,oBAC5BC,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,+CACPF,SAAS,wBACZG,MAAON,EAAAA,KAAaM,QAAQH,SAAS,uBAuDvC,UApDqB,WACnB,IAAMI,GAAWC,EAAAA,EAAAA,MAUjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEP,KAAM,GAAII,MAAO,GAAIF,SAAU,IAChDL,iBAAkBA,EAClBW,SAZe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAI5BL,EAASM,EAAAA,GAAAA,SAAwBF,IACjCC,KAIA,UAKE,UAAC,KAAD,CAASE,aAAa,MAAtB,WACE,UAAC,KAAD,CAAOC,QAAQ,OAAf,kBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOd,KAAK,OAAOC,UAAQ,EAACc,YAAY,UACpD,SAAC,KAAD,CAAcf,KAAK,OAAOgB,OAAQ,SAAAC,GAAG,OAAI,SAAC,KAAD,UAAUA,WAErD,UAAC,KAAD,CAAOJ,QAAQ,QAAf,mBAEE,SAAC,KAAD,CAAOC,KAAK,QAAQd,KAAK,QAAQC,UAAQ,EAACc,YAAY,WACtD,SAAC,KAAD,CAAcf,KAAK,QAAQgB,OAAQ,SAAAC,GAAG,OAAI,SAAC,KAAD,UAAUA,WAEtD,UAAC,KAAD,CAAOJ,QAAQ,WAAf,sBAEE,SAAC,KAAD,CACEC,KAAK,WACLd,KAAK,WACLC,UAAQ,EACRc,YAAY,cAEd,SAAC,KAAD,CACEf,KAAK,WACLgB,OAAQ,SAAAC,GAAG,OAAI,SAAC,KAAD,UAAUA,WAG7B,SAAC,KAAD,CAAWH,KAAK,SAAhB,uBACA,SAAC,KAAD,CACEI,UAAW,IACXC,SAAS,aACT1C,MAAM,UACN2C,cAAY","sources":["components/formContacts/FormContacs.styled.js","pages/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: ${p => p.theme.space[4]}px;\n  border: ${p => p.theme.borders.normal};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.text};\n`;\nexport const Input = styled(Field)`\n  width: 300px;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal};\n  outline: none;\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.focus};\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: max-content;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: none;\n  outline: none;\n  box-shadow: ${p => p.theme.shadows.lineShadow};\n  :hover {\n    transform: scale(1.05);\n    background-color: ${p => p.theme.colors.blue};\n    border: none;\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nexport const ErrText = styled.p`\n  color: ${p => p.theme.colors.red};\n  padding: 0px;\n  margin: 0px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  FormBox,\n  Label,\n  Input,\n  SubmitBtn,\n  ErrText,\n} from '../components/formContacts/FormContacs.styled';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n  password: yup\n    .string()\n    .min(7, 'Password must be at least 8 characters long')\n    .required('Password is required'),\n  email: yup.string().email().required('Email is required'),\n});\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const submitForm = (values, { resetForm }) => {\n    // console.log(email);\n    // console.log(password);\n    // console.log(name);\n    dispatch(authOperations.register(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={submitForm}\n    >\n      <FormBox autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <Input type=\"text\" name=\"name\" required placeholder=\"name\"></Input>\n          <ErrorMessage name=\"name\" render={msg => <ErrText>{msg}</ErrText>} />\n        </Label>\n        <Label htmlFor=\"email\">\n          Email\n          <Input type=\"email\" name=\"email\" required placeholder=\"email\"></Input>\n          <ErrorMessage name=\"email\" render={msg => <ErrText>{msg}</ErrText>} />\n        </Label>\n        <Label htmlFor=\"password\">\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            required\n            placeholder=\"password\"\n          ></Input>\n          <ErrorMessage\n            name=\"password\"\n            render={msg => <ErrText>{msg}</ErrText>}\n          />\n        </Label>\n        <SubmitBtn type=\"submit\">Register</SubmitBtn>\n        <ToastContainer\n          autoClose={3000}\n          position=\"top-center\"\n          theme=\"colored\"\n          pauseOnHover\n        />\n      </FormBox>\n    </Formik>\n  );\n};\nexport default RegisterPage;\n\n// disabled={isLoading}\n"],"names":["FormBox","styled","Form","p","theme","space","borders","normal","Label","colors","text","Input","Field","fontSizes","m","radii","focus","SubmitBtn","shadows","lineShadow","blue","ErrText","red","s","validationSchema","yup","shape","name","required","password","min","email","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","authOperations","autoComplete","htmlFor","type","placeholder","render","msg","autoClose","position","pauseOnHover"],"sourceRoot":""}