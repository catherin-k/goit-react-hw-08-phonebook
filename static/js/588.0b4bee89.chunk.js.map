{"version":3,"file":"static/js/588.0b4bee89.chunk.js","mappings":"6NA+CA,UAxCkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CAAQC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IAAMC,SANnC,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC5BP,EAASQ,EAAAA,GAAAA,MAAqBF,IAC9BC,KAIA,UACE,UAAC,KAAD,CAASE,aAAa,MAAtB,WACE,UAAC,KAAD,CAAOC,QAAQ,QAAf,mBAEE,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,UAAQ,EAACC,YAAY,WACtD,SAAC,KAAD,CAAcF,KAAK,QAAQG,OAAQ,SAAAC,GAAG,OAAI,SAAC,KAAD,UAAUA,WAEtD,UAAC,KAAD,CAAON,QAAQ,WAAf,sBAEE,SAAC,KAAD,CACEC,KAAK,WACLC,KAAK,WACLC,UAAQ,EACRC,YAAY,cAEd,SAAC,KAAD,CACEF,KAAK,WACLG,OAAQ,SAAAC,GAAG,OAAI,SAAC,KAAD,UAAUA,WAG7B,SAAC,KAAD,CAAWL,KAAK,SAAhB,qBACA,SAAC,KAAD,CACEM,UAAW,IACXC,SAAS,aACTC,MAAM,UACNC,cAAY,W,iMCtCTC,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0IAKP,SAAAE,GAAC,OAAIA,EAAEL,MAAMM,MAAM,MACpB,SAAAD,GAAC,OAAIA,EAAEL,MAAMO,QAAQC,UAGpBC,EAAQN,EAAAA,GAAAA,MAAH,0GAGF,SAAAE,GAAC,OAAIA,EAAEL,MAAMM,MAAM,MACxB,SAAAD,GAAC,OAAIA,EAAEL,MAAMU,OAAOC,QAElBC,GAAQT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,0MAEF,SAAAE,GAAC,OAAIA,EAAEL,MAAMM,MAAM,MACtB,SAAAD,GAAC,OAAIA,EAAEL,MAAMM,MAAM,MACjB,SAAAD,GAAC,OAAIA,EAAEL,MAAMc,UAAUC,KACnB,SAAAV,GAAC,OAAIA,EAAEL,MAAMgB,MAAMR,UAC1B,SAAAH,GAAC,OAAIA,EAAEL,MAAMO,QAAQC,UAInB,SAAAH,GAAC,OAAIA,EAAEL,MAAMO,QAAQU,SAItBC,EAAYf,EAAAA,GAAAA,OAAH,6SAEN,SAAAE,GAAC,OAAIA,EAAEL,MAAMM,MAAM,MACtB,SAAAD,GAAC,OAAIA,EAAEL,MAAMM,MAAM,MACb,SAAAD,GAAC,OAAIA,EAAEL,MAAMgB,MAAMR,UAGtB,SAAAH,GAAC,OAAIA,EAAEL,MAAMmB,QAAQC,cAGb,SAAAf,GAAC,OAAIA,EAAEL,MAAMU,OAAOW,QAO/BC,EAAUnB,EAAAA,GAAAA,EAAH,2FACT,SAAAE,GAAC,OAAIA,EAAEL,MAAMU,OAAOa,OAGhB,SAAAlB,GAAC,OAAIA,EAAEL,MAAMc,UAAUU","sources":["pages/LoginPage.js","pages/Pages.styled.js"],"sourcesContent":["import { Formik, ErrorMessage } from 'formik';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FormBox, Label, Input, SubmitBtn, ErrText } from './Pages.styled';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const submitForm = (values, { resetForm }) => {\n    dispatch(authOperations.logIn(values));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ email: '', password: '' }} onSubmit={submitForm}>\n      <FormBox autoComplete=\"off\">\n        <Label htmlFor=\"email\">\n          Email\n          <Input type=\"email\" name=\"email\" required placeholder=\"email\"></Input>\n          <ErrorMessage name=\"email\" render={msg => <ErrText>{msg}</ErrText>} />\n        </Label>\n        <Label htmlFor=\"password\">\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            required\n            placeholder=\"password\"\n          ></Input>\n          <ErrorMessage\n            name=\"password\"\n            render={msg => <ErrText>{msg}</ErrText>}\n          />\n        </Label>\n        <SubmitBtn type=\"submit\">Log in</SubmitBtn>\n        <ToastContainer\n          autoClose={3000}\n          position=\"top-center\"\n          theme=\"colored\"\n          pauseOnHover\n        />\n      </FormBox>\n    </Formik>\n  );\n};\nexport default LoginPage;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormBox = styled(Form)`\n  margin: 0 auto;\n  width: 40%;\n  display: flex;\n  flex-direction: column;\n  padding: ${p => p.theme.space[4]}px;\n  border: ${p => p.theme.borders.normal};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.text};\n`;\nexport const Input = styled(Field)`\n  width: 60%;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal};\n  outline: none;\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.focus};\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: max-content;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: none;\n  outline: none;\n  box-shadow: ${p => p.theme.shadows.lineShadow};\n  :hover {\n    transform: scale(1.05);\n    background-color: ${p => p.theme.colors.blue};\n    border: none;\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nexport const ErrText = styled.p`\n  color: ${p => p.theme.colors.red};\n  padding: 0px;\n  margin: 0px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n"],"names":["dispatch","useDispatch","initialValues","email","password","onSubmit","values","resetForm","authOperations","autoComplete","htmlFor","type","name","required","placeholder","render","msg","autoClose","position","theme","pauseOnHover","FormBox","styled","Form","p","space","borders","normal","Label","colors","text","Input","Field","fontSizes","m","radii","focus","SubmitBtn","shadows","lineShadow","blue","ErrText","red","s"],"sourceRoot":""}